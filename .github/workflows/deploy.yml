name: deploy

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Authenticate with GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Authenticate with Heroku Registry
        uses: docker/login-action@v1
        with:
          registry: registry.heroku.com
          username: ${{ secrets.HEROKU_USERNAME }}
          password: ${{ secrets.HEROKU_API_KEY }}
      - name: Cache Docker Layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ github.sha }}
            ${{ runner.os }}-buildx-
      - name: Docker Build and Push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:${{ github.sha }}
            registry.heroku.com/${{ secrets.HEROKU_APP_NAME }}/web:latest
      - name: Move Docker Layers Cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
      - name: Release Version
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:release --app=${{ secrets.HEROKU_APP_NAME }} web
